"""Second Mntungwa Migration

Revision ID: c31777e7adf1
Revises: 187bef6f6983
Create Date: 2025-10-06 16:34:50.930628

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'c31777e7adf1'
down_revision = '187bef6f6983'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('employee_id')
    )
    op.create_table('lecturer_assignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('faculty_id', sa.Integer(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ),
    sa.ForeignKeyConstraint(['faculty_id'], ['faculties.id'], ),
    sa.ForeignKeyConstraint(['module_id'], ['modules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('lecturers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('employee_id', sa.String(length=50), nullable=False))
        batch_op.drop_index(batch_op.f('lecturer_id'))
        batch_op.create_unique_constraint(None, ['employee_id'])
        batch_op.drop_column('lecturer_id')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('lecturers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('lecturer_id', mysql.VARCHAR(length=50), nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index(batch_op.f('lecturer_id'), ['lecturer_id'], unique=True)
        batch_op.drop_column('employee_id')

    op.drop_table('lecturer_assignments')
    op.drop_table('admins')
    # ### end Alembic commands ###
